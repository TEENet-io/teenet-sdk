// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.5.0
// source: appid_service.proto

package appid

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for getting public key by app ID
type GetPublicKeyByAppIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppId         string                 `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPublicKeyByAppIDRequest) Reset() {
	*x = GetPublicKeyByAppIDRequest{}
	mi := &file_appid_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPublicKeyByAppIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicKeyByAppIDRequest) ProtoMessage() {}

func (x *GetPublicKeyByAppIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appid_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicKeyByAppIDRequest.ProtoReflect.Descriptor instead.
func (*GetPublicKeyByAppIDRequest) Descriptor() ([]byte, []int) {
	return file_appid_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetPublicKeyByAppIDRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

// Response message for getting public key by app ID
type GetPublicKeyByAppIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Publickey     string                 `protobuf:"bytes,1,opt,name=publickey,proto3" json:"publickey,omitempty"`
	Protocol      string                 `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Curve         string                 `protobuf:"bytes,3,opt,name=curve,proto3" json:"curve,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPublicKeyByAppIDResponse) Reset() {
	*x = GetPublicKeyByAppIDResponse{}
	mi := &file_appid_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPublicKeyByAppIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicKeyByAppIDResponse) ProtoMessage() {}

func (x *GetPublicKeyByAppIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_appid_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicKeyByAppIDResponse.ProtoReflect.Descriptor instead.
func (*GetPublicKeyByAppIDResponse) Descriptor() ([]byte, []int) {
	return file_appid_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetPublicKeyByAppIDResponse) GetPublickey() string {
	if x != nil {
		return x.Publickey
	}
	return ""
}

func (x *GetPublicKeyByAppIDResponse) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *GetPublicKeyByAppIDResponse) GetCurve() string {
	if x != nil {
		return x.Curve
	}
	return ""
}

// Voting service messages
// GetDeploymentAddressesRequest for voting coordinator to get deployment-client addresses
type GetDeploymentAddressesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppId         string                 `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"` // Single App ID to get all target deployment addresses for
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeploymentAddressesRequest) Reset() {
	*x = GetDeploymentAddressesRequest{}
	mi := &file_appid_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeploymentAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentAddressesRequest) ProtoMessage() {}

func (x *GetDeploymentAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appid_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentAddressesRequest.ProtoReflect.Descriptor instead.
func (*GetDeploymentAddressesRequest) Descriptor() ([]byte, []int) {
	return file_appid_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetDeploymentAddressesRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type GetDeploymentAddressesResponse struct {
	state            protoimpl.MessageState     `protogen:"open.v1"`
	Deployments      map[string]*DeploymentInfo `protobuf:"bytes,1,rep,name=deployments,proto3" json:"deployments,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // app_id -> deployment info
	NotFound         []string                   `protobuf:"bytes,2,rep,name=not_found,json=notFound,proto3" json:"not_found,omitempty"`                                                                 // App IDs that were not found or not deployed
	VotingSignPath   string                     `protobuf:"bytes,3,opt,name=voting_sign_path,json=votingSignPath,proto3" json:"voting_sign_path,omitempty"`                                             // Shared VotingSign API path for all instances
	RequiredVotes    int32                      `protobuf:"varint,4,opt,name=required_votes,json=requiredVotes,proto3" json:"required_votes,omitempty"`                                                 // Shared required votes for all instances
	EnableVotingSign bool                       `protobuf:"varint,5,opt,name=enable_voting_sign,json=enableVotingSign,proto3" json:"enable_voting_sign,omitempty"`                                      // Whether voting sign is enabled for this project
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetDeploymentAddressesResponse) Reset() {
	*x = GetDeploymentAddressesResponse{}
	mi := &file_appid_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeploymentAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentAddressesResponse) ProtoMessage() {}

func (x *GetDeploymentAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_appid_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentAddressesResponse.ProtoReflect.Descriptor instead.
func (*GetDeploymentAddressesResponse) Descriptor() ([]byte, []int) {
	return file_appid_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetDeploymentAddressesResponse) GetDeployments() map[string]*DeploymentInfo {
	if x != nil {
		return x.Deployments
	}
	return nil
}

func (x *GetDeploymentAddressesResponse) GetNotFound() []string {
	if x != nil {
		return x.NotFound
	}
	return nil
}

func (x *GetDeploymentAddressesResponse) GetVotingSignPath() string {
	if x != nil {
		return x.VotingSignPath
	}
	return ""
}

func (x *GetDeploymentAddressesResponse) GetRequiredVotes() int32 {
	if x != nil {
		return x.RequiredVotes
	}
	return 0
}

func (x *GetDeploymentAddressesResponse) GetEnableVotingSign() bool {
	if x != nil {
		return x.EnableVotingSign
	}
	return false
}

// DeploymentInfo represents deployment information for an app
type DeploymentInfo struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	AppId                   string                 `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ProjectName             string                 `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	DeploymentHost          string                 `protobuf:"bytes,3,opt,name=deployment_host,json=deploymentHost,proto3" json:"deployment_host,omitempty"`                              // ServiceHost - deployment client host IP
	ContainerIp             string                 `protobuf:"bytes,4,opt,name=container_ip,json=containerIp,proto3" json:"container_ip,omitempty"`                                       // ContainerIP - direct container IP
	ServicePort             int32                  `protobuf:"varint,5,opt,name=service_port,json=servicePort,proto3" json:"service_port,omitempty"`                                      // Container service port
	DeploymentClientAddress string                 `protobuf:"bytes,6,opt,name=deployment_client_address,json=deploymentClientAddress,proto3" json:"deployment_client_address,omitempty"` // Pre-constructed deployment-client gRPC address
	DeployedAt              int64                  `protobuf:"varint,7,opt,name=deployed_at,json=deployedAt,proto3" json:"deployed_at,omitempty"`                                         // Unix timestamp when deployed
	DeploymentType          string                 `protobuf:"bytes,8,opt,name=deployment_type,json=deploymentType,proto3" json:"deployment_type,omitempty"`                              // 'file', 'docker', or 'image_url'
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DeploymentInfo) Reset() {
	*x = DeploymentInfo{}
	mi := &file_appid_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentInfo) ProtoMessage() {}

func (x *DeploymentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_appid_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentInfo.ProtoReflect.Descriptor instead.
func (*DeploymentInfo) Descriptor() ([]byte, []int) {
	return file_appid_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeploymentInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *DeploymentInfo) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *DeploymentInfo) GetDeploymentHost() string {
	if x != nil {
		return x.DeploymentHost
	}
	return ""
}

func (x *DeploymentInfo) GetContainerIp() string {
	if x != nil {
		return x.ContainerIp
	}
	return ""
}

func (x *DeploymentInfo) GetServicePort() int32 {
	if x != nil {
		return x.ServicePort
	}
	return 0
}

func (x *DeploymentInfo) GetDeploymentClientAddress() string {
	if x != nil {
		return x.DeploymentClientAddress
	}
	return ""
}

func (x *DeploymentInfo) GetDeployedAt() int64 {
	if x != nil {
		return x.DeployedAt
	}
	return 0
}

func (x *DeploymentInfo) GetDeploymentType() string {
	if x != nil {
		return x.DeploymentType
	}
	return ""
}

var File_appid_service_proto protoreflect.FileDescriptor

const file_appid_service_proto_rawDesc = "" +
	"\n" +
	"\x13appid_service.proto\x12\x05appid\"3\n" +
	"\x1aGetPublicKeyByAppIDRequest\x12\x15\n" +
	"\x06app_id\x18\x01 \x01(\tR\x05appId\"m\n" +
	"\x1bGetPublicKeyByAppIDResponse\x12\x1c\n" +
	"\tpublickey\x18\x01 \x01(\tR\tpublickey\x12\x1a\n" +
	"\bprotocol\x18\x02 \x01(\tR\bprotocol\x12\x14\n" +
	"\x05curve\x18\x03 \x01(\tR\x05curve\"6\n" +
	"\x1dGetDeploymentAddressesRequest\x12\x15\n" +
	"\x06app_id\x18\x01 \x01(\tR\x05appId\"\xed\x02\n" +
	"\x1eGetDeploymentAddressesResponse\x12X\n" +
	"\vdeployments\x18\x01 \x03(\v26.appid.GetDeploymentAddressesResponse.DeploymentsEntryR\vdeployments\x12\x1b\n" +
	"\tnot_found\x18\x02 \x03(\tR\bnotFound\x12(\n" +
	"\x10voting_sign_path\x18\x03 \x01(\tR\x0evotingSignPath\x12%\n" +
	"\x0erequired_votes\x18\x04 \x01(\x05R\rrequiredVotes\x12,\n" +
	"\x12enable_voting_sign\x18\x05 \x01(\bR\x10enableVotingSign\x1aU\n" +
	"\x10DeploymentsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.appid.DeploymentInfoR\x05value:\x028\x01\"\xbf\x02\n" +
	"\x0eDeploymentInfo\x12\x15\n" +
	"\x06app_id\x18\x01 \x01(\tR\x05appId\x12!\n" +
	"\fproject_name\x18\x02 \x01(\tR\vprojectName\x12'\n" +
	"\x0fdeployment_host\x18\x03 \x01(\tR\x0edeploymentHost\x12!\n" +
	"\fcontainer_ip\x18\x04 \x01(\tR\vcontainerIp\x12!\n" +
	"\fservice_port\x18\x05 \x01(\x05R\vservicePort\x12:\n" +
	"\x19deployment_client_address\x18\x06 \x01(\tR\x17deploymentClientAddress\x12\x1f\n" +
	"\vdeployed_at\x18\a \x01(\x03R\n" +
	"deployedAt\x12'\n" +
	"\x0fdeployment_type\x18\b \x01(\tR\x0edeploymentType2\xd3\x01\n" +
	"\fAppIDService\x12\\\n" +
	"\x13GetPublicKeyByAppID\x12!.appid.GetPublicKeyByAppIDRequest\x1a\".appid.GetPublicKeyByAppIDResponse\x12e\n" +
	"\x16GetDeploymentAddresses\x12$.appid.GetDeploymentAddressesRequest\x1a%.appid.GetDeploymentAddressesResponseB\n" +
	"Z\b./;appidb\x06proto3"

var (
	file_appid_service_proto_rawDescOnce sync.Once
	file_appid_service_proto_rawDescData []byte
)

func file_appid_service_proto_rawDescGZIP() []byte {
	file_appid_service_proto_rawDescOnce.Do(func() {
		file_appid_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_appid_service_proto_rawDesc), len(file_appid_service_proto_rawDesc)))
	})
	return file_appid_service_proto_rawDescData
}

var file_appid_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_appid_service_proto_goTypes = []any{
	(*GetPublicKeyByAppIDRequest)(nil),     // 0: appid.GetPublicKeyByAppIDRequest
	(*GetPublicKeyByAppIDResponse)(nil),    // 1: appid.GetPublicKeyByAppIDResponse
	(*GetDeploymentAddressesRequest)(nil),  // 2: appid.GetDeploymentAddressesRequest
	(*GetDeploymentAddressesResponse)(nil), // 3: appid.GetDeploymentAddressesResponse
	(*DeploymentInfo)(nil),                 // 4: appid.DeploymentInfo
	nil,                                    // 5: appid.GetDeploymentAddressesResponse.DeploymentsEntry
}
var file_appid_service_proto_depIdxs = []int32{
	5, // 0: appid.GetDeploymentAddressesResponse.deployments:type_name -> appid.GetDeploymentAddressesResponse.DeploymentsEntry
	4, // 1: appid.GetDeploymentAddressesResponse.DeploymentsEntry.value:type_name -> appid.DeploymentInfo
	0, // 2: appid.AppIDService.GetPublicKeyByAppID:input_type -> appid.GetPublicKeyByAppIDRequest
	2, // 3: appid.AppIDService.GetDeploymentAddresses:input_type -> appid.GetDeploymentAddressesRequest
	1, // 4: appid.AppIDService.GetPublicKeyByAppID:output_type -> appid.GetPublicKeyByAppIDResponse
	3, // 5: appid.AppIDService.GetDeploymentAddresses:output_type -> appid.GetDeploymentAddressesResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_appid_service_proto_init() }
func file_appid_service_proto_init() {
	if File_appid_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_appid_service_proto_rawDesc), len(file_appid_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_appid_service_proto_goTypes,
		DependencyIndexes: file_appid_service_proto_depIdxs,
		MessageInfos:      file_appid_service_proto_msgTypes,
	}.Build()
	File_appid_service_proto = out.File
	file_appid_service_proto_goTypes = nil
	file_appid_service_proto_depIdxs = nil
}
